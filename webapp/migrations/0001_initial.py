<<<<<<< HEAD
# Generated by Django 2.2.28 on 2025-03-11 16:28

from django.db import migrations, models
import django.db.models.deletion
=======
# Generated by Django 2.2.28 on 2025-03-20 14:41

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
>>>>>>> 30df37d694ec9f0601bd503bd8c346f8af5f9b03


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
<<<<<<< HEAD
=======
            options={
                'verbose_name_plural': 'Categories',
            },
>>>>>>> 30df37d694ec9f0601bd503bd8c346f8af5f9b03
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
<<<<<<< HEAD
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('role', models.CharField(max_length=20)),
=======
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.CharField(max_length=50, unique=True)),
                ('role', models.CharField(choices=[('user', 'User'), ('organiser', 'Organiser')], default='user', max_length=20)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
>>>>>>> 30df37d694ec9f0601bd503bd8c346f8af5f9b03
            ],
        ),
        migrations.CreateModel(
            name='QAForum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_text', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.User')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('date', models.DateTimeField()),
                ('location', models.TextField()),
                ('attendees', models.ManyToManyField(blank=True, related_name='attended_events', to='webapp.User')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.Category')),
<<<<<<< HEAD
                ('organiser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organized_events', to='webapp.User')),
=======
                ('organiser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organised_events', to='webapp.User')),
>>>>>>> 30df37d694ec9f0601bd503bd8c346f8af5f9b03
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.Event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.User')),
            ],
        ),
    ]
